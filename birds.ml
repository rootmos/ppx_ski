let b a b c          = {|((S(KS))K)abc|} (* Bluebird *)
let b1 a b c d       = {|((S(K((S(KS))K)))((S(KS))K))abcd|} (* Blackbird *)
let b2 a b c d e     = {|((S(K((S(K((S(KS))K)))((S(KS))K))))((S(KS))K))abcde|} (* Bunting *)
let b3 a b c d       = {|((S(K((S(K((S(KS))K)))((S(KS))K))))((S(KS))K))abcd|} (* Becard *)
let c a b c          = {|((S((S(K((S(KS))K)))S))(KK))abc|} (* Cardinal *)
let d a b c d        = {|(S(K((S(KS))K)))abcd|} (* Dove *)
let d1 a b c d e     = {|(S(K(S(K((S(KS))K)))))abcde|} (* Dickcissel *)
let d2 a b c d e     = {|((S(K((S(KS))K)))(S(K((S(KS))K))))abcde|} (* Dovekies *)
let e a b c d e      = {|(S(K((S(K((S(KS))K)))((S(KS))K))))abcde|} (* Eagle *)
let e2 a b c d e f g = {|((S(K((S(K((S(KS))K)))((S(KS))K))))(S(K((S(K((S(KS))K)))((S(KS))K)))))abcdefg|} (* Bald Eagle *)
let f a b c          = {|((S(K((S((SK)K))(K((S(K(S((SK)K))))K)))))((S(K((S(K((S(KS))K)))((S(KS))K))))((S(K(S((SK)K))))K)))abc|} (* Finch *)
let g a b c d        = {|((S(K((S(KS))K)))((S((S(K((S(KS))K)))S))(KK)))abcd|} (* Goldfinch *)
let h a b c          = {|((S(K((S(K(S((S(K((S((SK)K))((SK)K))))((S(K((S(KS))K)))((S(K(S((SK)K))))K))))))K)))(S(K((S((S(K((S(KS))K)))S))(KK)))))abc|} (* Hummingbird *)
let i a              = {|((SK)K)a|} (* Id entity Bird (aka Idiot) *)
(*let j a b c d        = {|((S(K(S(K((S((S(K((S(KS))K)))S))(KK))))))((S((S(K((S((SK)K))((SK)K))))((S(K((S(KS))K)))((S(K(S((SK)K))))K))))(K((S(K((S((S(K((S(KS))K)))S))(KK))))(S(K((S(K((S(KS))K)))((S(KS))K))))))))abcd|} (* Jay *)*)
let k a b            = {|Kab|} (* Kestrel (True) *)
(*let l a b            = {|((S((S(KS))K))(K((S((SK)K))((SK)K))))ab|} (* Lark *)*)
(*let m a              = {|((S((SK)K))((SK)K))a|} (* Mockingbird *)*)
(*let m2 a b           = {|(S(K((S((SK)K))((SK)K))))ab|} (* Double Mockingbird *)*)
let o a b            = {|(S((SK)K))ab|} (* Owl *)
let q a b c          = {|((S(K(S((S(KS))K))))K)abc|} (* Queer Bird *)
let q1 a b c         = {|((S(K((S((S(K((S(KS))K)))S))(KK))))((S(KS))K))abc|} (* Quixotic Bird *)
let q2 a b c         = {|((S(K(S((S(K((S((S(K((S(KS))K)))S))(KK))))((S(KS))K)))))K)abc|} (* Quizzical Bird *)
let q3 a b c         = {|(S(K((S(K(S((SK)K))))K)))abc|} (* Quirky Bird *)
let q4 a b c         = {|((S(K((S((S(K((S(KS))K)))S))(KK))))((S(K(S((S(K((S((S(K((S(KS))K)))S))(KK))))((S(KS))K)))))K))abc|} (* Quacky Bird *)
let r a b c          = {|((S(K((S(KS))K)))((S(K(S((SK)K))))K))abc|} (* Robin *)
let s a b c          = {|Sabc|} (* Starling *)
let t a b            = {|((S(K(S((SK)K))))K)ab|} (* Thrush *)
(*let u a b            = {|((S(K(S((SK)K))))((S((SK)K))((SK)K)))ab|} (* Turing *)*)
let v a b c          = {|((S(K((S((S(K((S(KS))K)))S))(KK))))((S(K(S((SK)K))))K))abc|} (* Vireo (aka Pairing) *)
let w a b            = {|((S(K(S((S(K((S((SK)K))((SK)K))))((S(K((S(KS))K)))((S(K(S((SK)K))))K))))))K)ab|} (* Warbler *)
let w1 a b           = {|((S(K(S((S(K(S((S(K((S((SK)K))((SK)K))))((S(K((S(KS))K)))((S(K(S((SK)K))))K))))))K))))K)ab|} (* Converse Warbler *)
(*let y a              = {|((SS)K)((S(K((SS)(S((SS)K)))))K)a|} (* Why Bird (aka Sage Bird) *)*)
let i1 a b           = {|(S(SK))ab|} (* Id entity Bird Once Removed *)
let w1 a b c         = {|(S(K((S(K(S((S(K((S((SK)K))((SK)K))))((S(K((S(KS))K)))((S(K(S((SK)K))))K))))))K)))abc|} (* Warbler Once Removed *)
let c1 a b c d       = {|(S(K((S((S(K((S(KS))K)))S))(KK))))abcd|} (* Cardinal Once Removed *)
let r1 a b c d       = {|((S(K((S((S(K((S(KS))K)))S))(KK))))(S(K((S((S(K((S(KS))K)))S))(KK)))))abcd|} (* Robin Once Removed *)
let f1 a b c d       = {|((S(K(S(K((S((S(K((S(KS))K)))S))(KK))))))((S(K((S((S(K((S(KS))K)))S))(KK))))(S(K((S((S(K((S(KS))K)))S))(KK))))))abcd|} (* Finch Once Removed *)
let v1 a b c d       = {|((S(K((S((S(K((S(KS))K)))S))(KK))))((S(K(S(K((S((S(K((S(KS))K)))S))(KK))))))((S(K((S((S(K((S(KS))K)))S))(KK))))(S(K((S((S(K((S(KS))K)))S))(KK)))))))abcd|} (* Vireo Once Removed *)
(*let i2             = {| a b c|} (* Id entity Bird Twice Removed *)*)
let w2 a b c d       = {|(S(K(S(K((S(K(S((S(K((S((SK)K))((SK)K))))((S(K((S(KS))K)))((S(K(S((SK)K))))K))))))K)))))abcd|} (* Warbler Twice Removed *)
let c2 a b c d e     = {|(S(K(S(K((S((S(K((S(KS))K)))S))(KK))))))abcde|} (* Cardinal Twice Removed *)
let r2 a b c d e     = {|(S(K((S(K((S((S(K((S(KS))K)))S))(KK))))(S(K((S((S(K((S(KS))K)))S))(KK)))))))abcde|} (* Robin Twice Removed *)
let f2 a b c d e     = {|(S(K((S(K(S(K((S((S(K((S(KS))K)))S))(KK))))))((S(K((S((S(K((S(KS))K)))S))(KK))))(S(K((S((S(K((S(KS))K)))S))(KK))))))))abcde|} (* Finch Twice Removed *)
let v2 a b c d e     = {|(S(K((S(K((S((S(K((S(KS))K)))S))(KK))))((S(K(S(K((S((S(K((S(KS))K)))S))(KK))))))((S(K((S((S(K((S(KS))K)))S))(KK))))(S(K((S((S(K((S(KS))K)))S))(KK)))))))))abcde|} (* Vireo Twice Removed *)
let ki a b           = {|(K((SK)K))ab|} (* Kite (False) *)
(*let w  l           = {|(((S((SK)K))((SK)K))((S((SK)K))((SK)K)))l|} (* Omega *)*)
(*let kM a b           = {|(K((S((SK)K))((SK)K)))ab|} (* Konstant Mocker *)*)
(*let c(KM) a b        = {|((S(K(S(K((S((SK)K))((SK)K))))))K)ab|} (* Crossed Konstant Mocker *)*)
(*let q  l           = {|((((SS)K)((S(K((SS)(S((SS)K)))))K)(S((SK)K)))l|} (* Theta *)*)

